AWSTemplateFormatVersion: '2010-09-09'
Description: VPC with public and private subnets
Parameters:
  ParentStack:
    Type: String
    Description: Name of parent stack
    Default: my-parent
  ClassB:
    Description: Class B of VPC (10.XXX.0.0/16)
    Type: Number
    ConstraintDescription: Must be in the range [0-255]
    MinValue: 0
    MaxValue: 255
Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Sub '10.${ClassB}.0.0/16'
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Sub '${ParentStack}'
  SG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub '${ParentStack} SG-group'
      GroupDescription: Open egress
      SecurityGroupEgress:
        - IpProtocol: '-1'
          CidrIp: '0.0.0.0/0'
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value: !Sub '${ParentStack} SG'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: !Sub '${ParentStack} IG'
  VPCGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  NetworkAclPublic:
    Type: 'AWS::EC2::NetworkAcl'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${ParentStack} PublicACL'
  NetworkAclPrivate:
    Type: 'AWS::EC2::NetworkAcl'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${ParentStack} PrivateACL'
  NetworkAclEntryInPublicAllowAll:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref NetworkAclPublic
      RuleNumber: 99
      Protocol: -1
      RuleAction: allow
      Egress: false
      CidrBlock: '0.0.0.0/0'
  NetworkAclEntryOutPublicAllowAll:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref NetworkAclPublic
      RuleNumber: 99
      Protocol: -1
      RuleAction: allow
      Egress: true
      CidrBlock: '0.0.0.0/0'
  NetworkAclEntryInPrivateAllowVPC:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref NetworkAclPrivate
      RuleNumber: 99
      Protocol: -1
      RuleAction: allow
      Egress: false
      CidrBlock: '0.0.0.0/0'
  NetworkAclEntryOutPrivateAllowVPC:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref NetworkAclPrivate
      RuleNumber: 99
      Protocol: -1
      RuleAction: allow
      Egress: true
      CidrBlock: '0.0.0.0/0'
Outputs:
  VPC:
    Description: 'VPC.'
    Value: !Ref VPC
  SecurityGroup:
    Description: 'SG.'
    Value: !Ref SG
  InternetGateway:
    Description: 'Internet Gateway'
    Value: !Ref InternetGateway
  NetworkAclPublic:
    Description: 'Public Network ACL'
    Value: !Ref NetworkAclPublic
  NetworkAclPrivate:
    Description: 'Private Network ACL'
    Value: !Ref NetworkAclPrivate
